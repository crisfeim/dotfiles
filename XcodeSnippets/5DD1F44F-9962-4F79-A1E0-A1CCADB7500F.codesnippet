<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>emailvalidator</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>/// **
/// Native email validation with rawrepresantables &amp; NSDataDetector API
/// https://www.swiftbysundell.com/articles/validating-email-addresses/
/// **

struct EmailAddress: RawRepresentable, Codable {
    let rawValue: String
    
    init?(rawValue: String) {
        let detector = try? NSDataDetector(
            types: NSTextCheckingResult.CheckingType.link.rawValue
        )
        
        let range = NSRange(
            rawValue.startIndex..&lt;rawValue.endIndex,
            in: rawValue
        )
        
        let matches = detector?.matches(
            in: rawValue,
            options: [],
            range: range
        )
        
        // We only want our string to contain a single email
        // address, so if multiple matches were found, then
        // we fail our validation process and return nil:
        guard let match = matches?.first, matches?.count == 1 else {
            return nil
        }
        
        // Verify that the found link points to an email address,
        // and that its range covers the whole input string:
        guard match.url?.scheme == "mailto", match.range == range else {
            return nil
        }
        
        self.rawValue = rawValue
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>5DD1F44F-9962-4F79-A1E0-A1CCADB7500F</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>Email address validator from John Sundell Article</string>
	<key>IDECodeSnippetTitle</key>
	<string>Email validator</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
