<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>colors-appkit-swiftui</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>#if os(OSX)
import AppKit
public extension Color {
    static func dynamic(dark: Int, light: Int) -&gt; Color {
        let isDark = UserDefaults.standard.string(forKey: "AppleInterfaceStyle") == "Dark"
        return isDark ? Color(hex: dark) : Color(hex: light)
    }

    // MARK: - Text Colors

    static let placeholderText = Color(NSColor.placeholderTextColor)

    // MARK: - Label Colors
    static let label = Color(NSColor.labelColor)
    static let secondaryLabel = Color(NSColor.secondaryLabelColor)
    static let tertiaryLabel = Color(NSColor.tertiaryLabelColor)
    static let quaternaryLabel = Color(NSColor.quaternaryLabelColor)

    // MARK: - Gray Colors
    static let systemGray = Color(NSColor.systemGray)
    static let systemGray2 = Color.dynamic(dark: 0x636366, light: 0xAEAEB2)
    static let systemGray3 = Color.dynamic(dark: 0x48484A, light: 0xC7C7CC)
    static let systemGray4 = Color.dynamic(dark: 0x3A3A3C, light: 0xD1D1D6)
    static let systemGray5 = Color.dynamic(dark: 0x2C2C2E, light: 0xE5E5EA)
    static let systemGray6 = Color.dynamic(dark: 0x1C1C1E, light: 0xF2F2F7)

    // MARK: - Other Colors
    static let separator = Color(NSColor.separatorColor)
    static let link = Color(NSColor.linkColor)

    // MARK: System Colors
    static let systemBlue = Color(NSColor.systemBlue)
    static let systemPurple = Color(NSColor.systemPurple)
    static let systemGreen = Color(NSColor.systemGreen)
    static let systemYellow = Color(NSColor.systemYellow)
    static let systemOrange = Color(NSColor.systemOrange)
    static let systemPink = Color(NSColor.systemPink)
    static let systemRed = Color(NSColor.systemRed)
    static let systemTeal = Color(NSColor.systemTeal)
    static let systemIndigo = Color(NSColor.systemIndigo)
}
#endif
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>0127C75E-AF3A-449C-8544-E0B2389BC645</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>AppKit colors SwiftUI extension</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
